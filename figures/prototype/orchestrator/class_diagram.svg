<?xml version="1.0" encoding="us-ascii" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="566px" preserveAspectRatio="none" style="width:481px;height:566px;background:#FFFFFF;" version="1.1" viewBox="0 0 481 566" width="481px" zoomAndPan="magnify"><defs/><g><!--class Orchestrator--><g id="elem_Orchestrator"><rect codeLine="4" fill="#FFFFFF" height="540.8338" id="Orchestrator" rx="2.5" ry="2.5" style="stroke:#000000;stroke-width:1.0;" width="455" x="12" y="12"/><ellipse cx="192.75" cy="26.534" fill="#FFFFFF" rx="9" ry="9" style="stroke:#000000;stroke-width:1.0;"/><path d="M196.1563,28.5027 C195.4375,29.1746 194.1406,30.3465 192.3906,30.3465 C190.1719,30.3465 189.2031,28.409 189.2031,26.4558 C189.2031,24.0652 190.6875,22.7996 192.3281,22.7996 C194.3438,22.7996 194.5625,24.3152 194.7344,25.409 L196.1563,25.2215 C196.0625,24.6433 195.9844,24.0652 195.9844,23.0965 C195.9844,22.4246 196.0313,21.8777 196.0625,21.4558 L194.6563,21.4558 L194.5469,22.409 C193.9531,21.8777 193.3125,21.3308 192.0938,21.3308 C190.0469,21.3308 187.6406,23.159 187.6406,26.4715 C187.6406,29.409 189.4063,31.7996 192.4063,31.7996 C194.8438,31.7996 196.5469,30.1746 197.1406,29.5965 L196.1563,28.5027 Z " fill="#000000"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="86" x="210.25" y="31.9659">Orchestrator</text><line style="stroke:#000000;stroke-width:1.0;" x1="13" x2="466" y1="41.0679" y2="41.0679"/><ellipse cx="23" cy="56.1019" fill="none" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="83" x="30" y="60.0339">serial: Serial</text><ellipse cx="23" cy="75.1698" fill="none" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="106" x="30" y="79.1018">proto_spec: dict</text><ellipse cx="23" cy="94.2377" fill="none" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="86" x="30" y="98.1697">passwds: list</text><ellipse cx="23" cy="113.3056" fill="none" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="76" x="30" y="117.2376">hashes: list</text><ellipse cx="23" cy="132.3735" fill="none" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="59" x="30" y="136.3055">salts: list</text><ellipse cx="23" cy="151.4415" fill="none" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="130" x="30" y="155.3734">txQueueCeiling: int</text><ellipse cx="23" cy="170.5094" fill="none" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="69" x="30" y="174.4414">nodes: list</text><line style="stroke:#000000;stroke-width:1.0;" x1="13" x2="466" y1="182.5433" y2="182.5433"/><ellipse cx="23" cy="197.5773" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="125" x="30" y="201.5093">reset_nodes(): void</text><ellipse cx="23" cy="216.6452" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="288" x="30" y="220.5772">setup_nodes(rounds: int, hash: bytes): void</text><ellipse cx="23" cy="235.7131" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="205" x="30" y="239.6451">read_hashlist(hashlist: str): list</text><ellipse cx="23" cy="254.781" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="207" x="30" y="258.713">read_wordlist(wordlist: str): list</text><ellipse cx="23" cy="273.849" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="362" x="30" y="277.7809">prep_pkt(action: bytes, addr: bytes, data: bytes): bytes</text><ellipse cx="23" cy="292.9169" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="179" x="30" y="296.8489">txQueueMsgsWaiting(): int</text><ellipse cx="23" cy="311.9848" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="316" x="30" y="315.9168">send_to_node(node_addr: int, data: bytes): void</text><ellipse cx="23" cy="331.0527" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="259" x="30" y="334.9847">read_from_node(node_addr: int): bytes</text><ellipse cx="23" cy="350.1206" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="227" x="30" y="354.0526">sha256_pad(passwd: bytes): bytes</text><ellipse cx="23" cy="369.1885" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="72" x="30" y="373.1205">fuck(): void</text><ellipse cx="23" cy="388.2565" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="290" x="30" y="392.1884">cmp_byte_with_data(x: bytes, y: bytes): bool</text><ellipse cx="23" cy="407.3244" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="191" x="30" y="411.2564">escape_l3(data: bytes): bytes</text><ellipse cx="23" cy="426.3923" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="431" x="30" y="430.3243">schick_passwort(node_addr: int, passwd: bytes, salz: bytes): void</text><ellipse cx="23" cy="445.4602" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="307" x="30" y="449.3922">schick_hash(node_addr: int, hash: bytes): void</text><ellipse cx="23" cy="464.5281" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="319" x="30" y="468.4601">schick_rounds(node_addr: int, rounds: int): void</text><ellipse cx="23" cy="483.596" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="260" x="30" y="487.528">check_flags_and_find_ready_node(): int</text><ellipse cx="23" cy="502.664" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="175" x="30" y="506.5959">wait_for_nodes(t: int): void</text><ellipse cx="23" cy="521.7319" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="255" x="30" y="525.6639">receive_passwd(node_addr: int): bytes</text><ellipse cx="23" cy="540.7998" fill="#FFFFFF" rx="3" ry="3" style="stroke:#000000;stroke-width:1.0;"/><text fill="#000000" font-family="Verdana" font-size="14" lengthAdjust="spacing" textLength="131" x="30" y="544.7318">ruuuuuunnn(): void</text></g><!--SRC=[VL8zR-Cm3DtpAzJDnMNgeHsytbmKHOSR1Pv4nq8SII3ffhcY_xtwS58RJgj17q_a8n_96-dnW2eEuFo6zyuh2eoRZHc0MJsHwP65G0AfzurIlnGZEHXQzLBE0aKA4ZH7DAsopaW5a__HSgi6nnNfWHFP360OPFwMj-SHH_o3Rd1-rohdA-w3lVWLW91HT86RsrQz1cUdt6IC4qvXz3by8jcMqAtwTnBakJqXM9t_CdLplhGgARwTvLNCZe5iCJjVLcQHCEgubmQCkE2dU5i5rjBbOK7WAvDophK_yex_WfEaFoixLu3HMvrgdAKrUTELj8XRKYx5THGErxmMiRc7k_i77S4sjMlN4kn6iryKsnoYpj_wwAJNEOdcxIBpDAC8eOu9ie68UlZTV5S4DhqpUrsI22GhfOlijdb-_byHFh7aTguOlXc4oQNEpCffDagB0lIOVBe1TgmXzQTpQSjLFzMAp_ftJ2tLNQ1fDcN5HMZGlMALRdzg5erbUUyltVZu1000]--></g></svg>